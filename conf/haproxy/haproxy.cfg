#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # only allow TLS 1.2 or greater
    ssl-default-bind-options ssl-min-ver TLSv1.2

    # permitted ciphers in preferred order
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256

    ssl-dh-param-file /etc/pki/tls/certs/dhparams.pem

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  forwardfor except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    20s
    timeout queue           4m
    timeout connect         20s
    timeout client          4m
    timeout server          4m
    timeout http-keep-alive 20s
    timeout check           20s
    maxconn                 3000
    compression algo        gzip deflate
    compression type        text/html text/css text/plain

#---------------------------------------------------------------------
# web frontend for haproxy stats
#---------------------------------------------------------------------
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST

#---------------------------------------------------------------------
# web frontend which proxys to the backends
#---------------------------------------------------------------------
frontend web-frontend
    bind *:80
    bind *:443 ssl crt /etc/pki/tls/certs/svcplatform.pem
    acl secure dst_port eq 443
    rspadd Content-Security-Policy:\ upgrade-insecure-requests
    rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubDomains;\ preload
    rsprep ^Set-Cookie:\ (.*) Set-Cookie:\ \1;\ Secure if secure
    http-request redirect scheme https unless { ssl_fc }
    default_backend web-backend

#---------------------------------------------------------------------
# balance web requests between the various web backends
#---------------------------------------------------------------------
backend web-backend
    balance source
    hash-type consistent
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    server docker_server_1-web 127.0.0.1:8881 check
    server docker_server_2-web 127.0.0.1:8882 check
    server docker_server_3-web 127.0.0.1:8883 check

#---------------------------------------------------------------------
# ssh frontend which proxys to the backend
#---------------------------------------------------------------------
frontend ssh-frontend
    mode tcp
    option tcplog
    bind *:2222
    timeout client 1h
    default_backend ssh-backend

#---------------------------------------------------------------------
# ssh backend
#---------------------------------------------------------------------
backend ssh-backend
    mode tcp
    timeout server 1h
    server docker_server_1-ssh 127.0.0.1:2221 check
    server docker_server_2-ssh 127.0.0.1:2222 check
    server docker_server_3-ssh 127.0.0.1:2223 check
